{"ast":null,"code":"var _jsxFileName = \"/Users/liuyangongshouhu/Desktop/\\u524D\\u7AEF/learn-react/day-1/src/todolist.js\";\nimport React from 'react';\nimport TodoItem from './todoitem';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: ['learn react', 'learn english', 'learn vue'],\n      inputValue: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this;\n  } //按钮增加事件\n\n\n  handleBtnClick() {\n    let _this$state = this.state,\n        list = _this$state.list,\n        inputValue = _this$state.inputValue;\n\n    if (inputValue) {\n      this.setState({\n        list: [...list, inputValue],\n        inputValue: ''\n      });\n    } else {\n      alert('不得为空');\n    }\n  } //输入框事件\n\n\n  handleInputChange(e) {\n    console.log(e.target);\n    this.setState({\n      inputValue: e.target.value\n    });\n  } //每个item点击的时候删除\n\n\n  handleItemClick(index) {}\n\n  handleDelete(index) {\n    console.log(index);\n    let list = this.state.list;\n    const l = [...list];\n    l.splice(index, 1);\n    this.setState({\n      list: l\n    });\n  } //父组件通过属性的形式向子组件传递参数\n  //子组件通过props接受父组件传递过来的参数\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleBtnClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"add\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.list.map((item, index) => {\n      return React.createElement(TodoItem, {\n        delete: this.handleDelete.bind(this),\n        key: index,\n        content: item,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/liuyangongshouhu/Desktop/前端/learn-react/day-1/src/todolist.js"],"names":["React","TodoItem","TodoList","Component","constructor","props","state","list","inputValue","handleInputChange","bind","handleBtnClick","setState","alert","e","console","log","target","value","handleItemClick","index","handleDelete","l","splice","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACF,aADE,EAEF,eAFE,EAGF,WAHE,CADG;AAMTC,MAAAA,UAAU,EAAE;AANH,KAAb;AASA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA;AAEH,GAfkC,CAgBnC;;;AACAC,EAAAA,cAAc,GAAG;AAAA,sBACc,KAAKL,KADnB;AAAA,QACPC,IADO,eACPA,IADO;AAAA,QACDC,UADC,eACDA,UADC;;AAEb,QAAIA,UAAJ,EAAgB;AACZ,WAAKI,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAUC,UAAV,CADI;AAEVA,QAAAA,UAAU,EAAE;AAFF,OAAd;AAIH,KALD,MAKO;AACHK,MAAAA,KAAK,CAAC,MAAD,CAAL;AACH;AAEJ,GA5BkC,CA6BnC;;;AACAJ,EAAAA,iBAAiB,CAACK,CAAD,EAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA,SAAKL,QAAL,CAAc;AACVJ,MAAAA,UAAU,EAAEM,CAAC,CAACG,MAAF,CAASC;AADX,KAAd;AAGH,GAnCkC,CAoCnC;;;AACAC,EAAAA,eAAe,CAACC,KAAD,EAAQ,CACtB;;AACDC,EAAAA,YAAY,CAACD,KAAD,EAAQ;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AADgB,QAEVb,IAFU,GAED,KAAKD,KAFJ,CAEVC,IAFU;AAGhB,UAAMe,CAAC,GAAG,CAAC,GAAGf,IAAJ,CAAV;AACAe,IAAAA,CAAC,CAACC,MAAF,CAASH,KAAT,EAAgB,CAAhB;AACA,SAAKR,QAAL,CAAc;AACVL,MAAAA,IAAI,EAAEe;AADI,KAAd;AAGH,GA/CkC,CAiDnC;AACA;;;AACAE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,UAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAKC,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKE,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB,CAACC,IAAD,EAAON,KAAP,KAAiB;AAClC,aAAO,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKC,YAAL,CAAkBX,IAAlB,CAAuB,IAAvB,CAAlB;AAAgD,QAAA,GAAG,EAAEU,KAArD;AAA4D,QAAA,OAAO,EAAEM,IAArE;AAA2E,QAAA,KAAK,EAAEN,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADL,CALJ,CADJ;AAeH;;AAnEkC;;AAsEvC,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport TodoItem from './todoitem';\nclass TodoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [\n                'learn react',\n                'learn english',\n                'learn vue'\n            ],\n            inputValue: ''\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this\n\n    }\n    //按钮增加事件\n    handleBtnClick() {\n        let { list, inputValue } = this.state\n        if (inputValue) {\n            this.setState({\n                list: [...list, inputValue],\n                inputValue: ''\n            })\n        } else {\n            alert('不得为空')\n        }\n\n    }\n    //输入框事件\n    handleInputChange(e) {\n        console.log(e.target)\n        this.setState({\n            inputValue: e.target.value\n        })\n    }\n    //每个item点击的时候删除\n    handleItemClick(index) {\n    }\n    handleDelete(index) {\n        console.log(index)\n        let { list } = this.state;\n        const l = [...list];\n        l.splice(index, 1)\n        this.setState({\n            list: l\n        })\n    }\n\n    //父组件通过属性的形式向子组件传递参数\n    //子组件通过props接受父组件传递过来的参数\n    render() {\n        return (\n            <div>\n                <div>\n                    <input value={this.state.inputValue} onChange={this.handleInputChange}></input>\n                    <button onClick={this.handleBtnClick.bind(this)}>add</button>\n                </div>\n                <ul>\n                    {this.state.list.map((item, index) => {\n                        return <TodoItem delete={this.handleDelete.bind(this)} key={index} content={item} index={index} />\n                    })}\n                </ul>\n            </div>\n        );\n\n\n    }\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}